--- runqueue.py	(revision e665be2ad94b736d5a07395303fd71937c021ee8)
+++ runqueue.py	(date 1727784053205)
@@ -591,6 +591,53 @@
 
         return msgs
 
+    def get_task_children(self):
+        try:
+            f = open('task-children.txt')
+        except OSError:
+            return None
+        else:
+            task_children = {}
+            with f:
+                for line in f:
+                    task_name, children = line.split()
+                    task_children[task_name] = int(children)
+            return task_children
+
+    def change_weight(self, task_children):
+        weight = {}
+        deps_left = {}
+        task_done = {}
+        for tid in self.runtaskentries:
+            if not task_children:
+                weight[tid] = 1
+            else:
+                full_task_name = tid.split('/')[-1]
+
+                match = re.match(r'([^:]+):([^.]+)', full_task_name)
+                task_name = match.group(1).split('_')[0] + '.' + match.group(2) if match else ""
+
+                if task_name in task_children:
+                    weight[tid] = task_children[task_name] * 10 / 200
+                else:
+                    part1, _, part2 = task_name.rpartition('.')
+                    native_name = f"{part1}-native.{part2}"
+                    x86_name = f"{part1}-x86_64.{part2}"
+                    gcc_name = f"{part1}-14.1.0.{part2}"
+
+                    if native_name in task_children:
+                        weight[tid] = task_children[native_name] * 10 / 200
+                    elif x86_name in task_children:
+                        weight[tid] = task_children[x86_name] * 10 / 200
+                    elif gcc_name in task_children:
+                        weight[tid] = task_children[gcc_name] * 10 / 200
+                    else:
+                        weight[tid] = 10 / 200
+
+            task_done[tid] = False
+            deps_left[tid] = len(self.runtaskentries[tid].revdeps)
+        return weight, task_done, deps_left
+
     def calculate_task_weights(self, endpoints):
         """
         Calculate a number representing the "weight" of each task. Heavier weighted tasks
@@ -601,9 +648,9 @@
         """
 
         numTasks = len(self.runtaskentries)
-        weight = {}
-        deps_left = {}
-        task_done = {}
+
+        task_children = self.get_task_children()
+        weight, task_done, deps_left = self.change_weight(task_children)
 
         for tid in self.runtaskentries:
             task_done[tid] = False
